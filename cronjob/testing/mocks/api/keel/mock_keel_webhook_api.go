// Code generated by MockGen. DO NOT EDIT.
// Source: ../api/keel/keel_webhook_api.go

// Package mock_api_keel_webhook is a generated GoMock package.
package mock_api_keel_webhook

import (
	reflect "reflect"
	update_keel "github.com/scanyourkube/cronjob/dto/api/update"

	gomock "github.com/golang/mock/gomock"
)

// MockIKeelWebhookApi is a mock of IKeelWebhookApi interface.
type MockIKeelWebhookApi struct {
	ctrl     *gomock.Controller
	recorder *MockIKeelWebhookApiMockRecorder
}

// MockIKeelWebhookApiMockRecorder is the mock recorder for MockIKeelWebhookApi.
type MockIKeelWebhookApiMockRecorder struct {
	mock *MockIKeelWebhookApi
}

// NewMockIKeelWebhookApi creates a new mock instance.
func NewMockIKeelWebhookApi(ctrl *gomock.Controller) *MockIKeelWebhookApi {
	mock := &MockIKeelWebhookApi{ctrl: ctrl}
	mock.recorder = &MockIKeelWebhookApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIKeelWebhookApi) EXPECT() *MockIKeelWebhookApiMockRecorder {
	return m.recorder
}

// UpdateImage mocks base method.
func (m *MockIKeelWebhookApi) UpdateImage(keelWebhookDto update_keel.KeelWebhookDto) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateImage", keelWebhookDto)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateImage indicates an expected call of UpdateImage.
func (mr *MockIKeelWebhookApiMockRecorder) UpdateImage(keelWebhookDto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateImage", reflect.TypeOf((*MockIKeelWebhookApi)(nil).UpdateImage), keelWebhookDto)
}
