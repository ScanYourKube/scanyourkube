// Code generated by MockGen. DO NOT EDIT.
// Source: ../service/update/keel_update_service.go

// Package mock_update_service is a generated GoMock package.
package mock_update_service

import (
	reflect "reflect"
	registry_image "github.com/scanyourkube/cronjob/service/update/registryImage"

	gomock "github.com/golang/mock/gomock"
)

// MockIKeelUpdateService is a mock of IKeelUpdateService interface.
type MockIKeelUpdateService struct {
	ctrl     *gomock.Controller
	recorder *MockIKeelUpdateServiceMockRecorder
}

// MockIKeelUpdateServiceMockRecorder is the mock recorder for MockIKeelUpdateService.
type MockIKeelUpdateServiceMockRecorder struct {
	mock *MockIKeelUpdateService
}

// NewMockIKeelUpdateService creates a new mock instance.
func NewMockIKeelUpdateService(ctrl *gomock.Controller) *MockIKeelUpdateService {
	mock := &MockIKeelUpdateService{ctrl: ctrl}
	mock.recorder = &MockIKeelUpdateServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIKeelUpdateService) EXPECT() *MockIKeelUpdateServiceMockRecorder {
	return m.recorder
}

// Update mocks base method.
func (m *MockIKeelUpdateService) Update(registryImage registry_image.RegistryImage) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Update", registryImage)
}

// Update indicates an expected call of Update.
func (mr *MockIKeelUpdateServiceMockRecorder) Update(registryImage interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockIKeelUpdateService)(nil).Update), registryImage)
}
