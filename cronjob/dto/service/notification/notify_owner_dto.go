package notification

import "fmt"

type OwnerNotification struct {
	ApplicationName          string `json:"applicationName,omitempty"`
	ApplicationResourceName  string `json:"applicationResourceName,omitempty"`
	VulnerabilityName        string `json:"vulnerabilityName,omitempty"`
	VulnerabilityDescription string `json:"vulnerabilityDescription,omitempty"`
	NewVersion               string `json:"newVersion,omitempty"`
	ShouldUpdate             bool   `json:"shouldUpdate,omitempty"`
}

func NewOwnerNotification(
	applicationName,
	applicationResourceName,
	vulnerabilityName,
	vulnerabilityDescription,
	newVersion string,
	shouldUpdate bool) OwnerNotification {
	return OwnerNotification{
		ApplicationName:         applicationName,
		ApplicationResourceName: applicationResourceName,

		VulnerabilityName:        vulnerabilityName,
		VulnerabilityDescription: vulnerabilityDescription,
		NewVersion:               newVersion,
		ShouldUpdate:             shouldUpdate,
	}
}

func (dto OwnerNotification) GetSubject() string {
	if dto.ShouldUpdate {
		return fmt.Sprintf("ScanYourKube - Updating image %s to version %s of application %s", dto.ApplicationResourceName, dto.NewVersion, dto.ApplicationName)

	}
	return fmt.Sprintf("ScanYourKube - Couldn't update %s of application %s", dto.ApplicationResourceName, dto.ApplicationName)

}

func (dto OwnerNotification) GetBody() string {
	vulnerabilityInfosBody := fmt.Sprintf("<p>Our scan found the following vulnerability: %s</p><p>Details: %s</p>", dto.VulnerabilityName, dto.VulnerabilityDescription)
	if dto.ShouldUpdate {
		return fmt.Sprintf("<html><body><h2>Update of image %s</h2>%s<p>Be aware, that there might be problems with your application. Please check if everything still works out.</p><p>Best regards, your Kubernetes administrator</p><p><i>Generated by ScanYourKube</i></p>", dto.ApplicationResourceName, vulnerabilityInfosBody)
	} else {
		return fmt.Sprintf("<html><body><h2>Update of image %s failed</h2><p>Our vulnerability scan found a container image which doesn't match our vulnerability policy. Currently there is no new container version available to automatically update to. If this image is self maintained, please update your dependencies and deploy a new version. In the case of a managed image, please check if there is a newer major version available and verify if that version matches our vulnerability policy.</p>%s<p>Best regards, your Kubernetes administrator</p><p><i>Generated by ScanYourKube</i></p>", dto.ApplicationResourceName, vulnerabilityInfosBody)
	}
}
